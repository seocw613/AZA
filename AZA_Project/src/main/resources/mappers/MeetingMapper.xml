<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd"> 
<mapper namespace="com.aza.myapp.repository.MeetingDAO">

	<insert id="insert">
		insert into meeting (writer, title, content, id, location, coord, animal, meeting_date)
		values (#{writer}, #{title}, #{content}, #{id}, #{location}, #{coord}, #{animal}, #{meeting_date})
	</insert>
	
	<select id="selectList" resultType="MeetingVO">
		select *, (select count(*) from good where type='M' and good.post_no=meeting.no) as good_count
		from meeting where is_del = "N"
		<include refid="search"></include>
		<include refid="animal"></include>
		<include refid="arrange"></include>
		limit #{pageStart}, #{qty}
	</select>
	
	<select id="selectCount" resultType="int">
		select count(no) from meeting where is_del = "N" 
		<include refid="search"></include>
		<include refid="animal"></include>;
	</select>
	
	<select id="selectOne" resultType="MeetingVO">
		select *, (select count(*) from good where type='M' and good.post_no=meeting.no) as good_count 
		from meeting where no = #{no}
	</select>
	
	<update id="updateRead">
		update meeting set read_count = #{read_count} where no = #{no}
	</update>
	
	<update id="update">
		update meeting set title = #{title}, content = #{content}, animal = #{animal}, meeting_date = #{meeting_date} where no = #{no}
	</update>
	
	<select id="getLastNo" resultType="int">
		select max(no) from meeting
	</select>
	
	<update id="delete">
		update meeting set is_del = "Y" where no = #{no}
	</update>

	<!-- 검색 -->
	<sql id="search">
		<if test="type != null">
			<trim prefix = "and " prefixOverrides="OR">
				<foreach collection="typeToArray" item="type">
					<trim prefix="OR">
						<choose>
							<when test="type == 'title'.toString()">title like concat('%',#{keyword},'%')</when>
							<when test="type == 'content'.toString()">content like concat('%',#{keyword},'%')</when>
							<when test="type == 'writer'.toString()">writer like concat('%',#{keyword},'%')</when>
						</choose>
					</trim>
				</foreach>
			</trim>
		</if>
	</sql>
	
	<!-- 정렬 -->
	<sql id="arrange">
		<if test="arrange != null">
			<trim prefix = "order by " prefixOverrides="OR">
				<foreach collection="arrangeToArray" item="arrange">
					<trim prefix="OR">
						<choose>
							<when test="arrange == 'no'.toString()">no desc</when>
							<when test="arrange == 'read_count'.toString()">read_count desc</when>
							<when test="arrange == 'good_count'.toString()">good_count desc</when>
						</choose>
					</trim>
				</foreach>
			</trim>
		</if>
		<if test="arrange == null || arrange == ''">order by no desc</if>
	</sql>
	
	<!-- 동물 분류 -->
	<sql id="animal">
		<if test="animal != null">
			<trim prefix = "and " prefixOverrides="OR">
				<foreach collection="animalToArray" item="animal">
					<trim prefix="OR">
						<choose>
							<when test="animal == '1'.toString()">animal like concat('%',1,'%')</when>
							<when test="animal == '12'.toString()">(animal like concat('%',1,'%') or animal like concat('%',2,'%'))</when>
							<when test="animal == '13'.toString()">(animal like concat('%',1,'%') or animal like concat('%',3,'%'))</when>
							<when test="animal == '123'.toString()">(animal like concat('%',1,'%') or animal like concat('%',2,'%') or animal like concat('%',3,'%'))</when>
							<when test="animal == '2'.toString()">animal like concat('%',2,'%')</when>
							<when test="animal == '23'.toString()">(animal like concat('%',2,'%') or animal like concat('%',3,'%'))</when>
							<when test="animal == '3'.toString()">animal like concat('%',3,'%')</when>
						</choose>
					</trim>
				</foreach>
			</trim>
		</if>
	</sql>
	
</mapper>