<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd"> 
<mapper namespace="com.aza.myapp.repository.BoastDAO">
<insert id="insert">
	insert into boast(writer, title)
	values(#{writer}, #{title})
</insert>
<select id="getList" resultType="com.aza.myapp.domain.BoastVO">
	select *, (select count(*) from good where type='B' and good.post_no=boast.no) as good_count
		from boast where is_del = "N"
		<include refid="search"></include>
		<include refid="arrange"></include>
		limit #{pageStart}, #{qty}
</select>
<select id="selectTotalCount" resultType="int">
	select count(no) from boast where is_del = "N" 
		<include refid="search"></include>
		<include refid="arrange"></include>;
</select>
<select id="getDetail" resultType="com.aza.myapp.domain.BoastVO">
	select * from boast where no=#{no}
</select>
<select id="getDetailNoReadCount" resultType="com.aza.myapp.domain.BoastVO">
	select * from boast where no=#{no}
</select>
<update id="updateReadCount">
	update boast set read_count = read_count+1 where no=#{no}
</update>
<update id="update">
	update boast set 
	title=#{title}, post_date=now()
	where no=#{no}
</update>
<update id="delete">
	update boast set 
	is_del="Y"
	where no=#{no}
</update>
	
	<!-- 검색 -->
	<sql id="search">
		<if test="type != null">
			<trim prefix="and " prefixOverrides="OR">
				<foreach collection="typeToArray" item="type">
					<trim prefix="OR">
						<choose>
							<when test='type == "title".toString()'>title like concat('%',#{keyword},'%')</when>
							<when test='type == "writer".toString()'>writer like concat('%',#{keyword},'%')</when>
						</choose>
					</trim>
				</foreach>
			</trim>
		</if>
	</sql>
	
	<!-- 정렬 -->
	<sql id="arrange">
		<if test="arrange != null">
			<trim prefix = "order by " prefixOverrides="OR">
				<foreach collection="arrangeToArray" item="arrange">
					<trim prefix="OR">
						<choose>
							<when test="arrange == 'no'.toString()">no desc</when>
							<when test="arrange == 'read_count'.toString()">read_count desc</when>
							<when test="arrange == 'good_count'.toString()">
								good_count desc
							</when>
						</choose>
					</trim>
				</foreach>
			</trim>
		</if>
		<if test="arrange == null || arrange == ''">order by no desc</if>
	</sql>
</mapper>